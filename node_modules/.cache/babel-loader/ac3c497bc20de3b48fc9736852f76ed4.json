{"ast":null,"code":"var _jsxFileName = \"/Users/bryanpaucarimafranco/Desktop/kanban-mio/src/components/board/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Form from '../shared-components/form';\nimport Todo from '../todo';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board(_ref) {\n  _s();\n\n  let {\n    onUpdate\n  } = _ref;\n  const [tasks, setTasks] = useState(() => {\n    const stored = localStorage.getItem('tasks');\n    return stored ? JSON.parse(stored) : [];\n  });\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n    const lastDateTask = tasks[task.length - 1].date;\n    onUpdate(lastDateTask);\n  }, [tasks]); // crea las tasks\n\n  const handleCreateTask = (e, status) => {\n    // creamos una variable task que declara el objeto con sus propiedades\n    const task = {\n      id: tasks.length > 0 ? tasks[tasks.length - 1].id + 1 : 1,\n      title: e,\n      status: status,\n      date: new Date().toLocaleString()\n    }; // Hace una copia de lo que habia en el array actual mas el nuevo\n\n    setTasks(prevTasks => [...prevTasks, task]);\n  }; // Elimina las tareas por status\n\n\n  const handleClearTask = status => {\n    setTasks(prevTasks => prevTasks.filter(task => task.status !== status)); // filtra los que no cumplen el estado (generico)\n  }; // Elimina la tarea por id\n\n\n  const handleDeleteTask = id => {\n    setTasks(prevTasks => prevTasks.filter(task => task.id !== id)); // filtra los que no cumplen el id\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(Todo, {\n      title: \"TODO\",\n      tasks: tasks.filter(task => task.status === ''),\n      onCreateTask: e => handleCreateTask(e, ''),\n      onRemoveTask: handleDeleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      title: \"IN PROGRESS\",\n      tasks: tasks.filter(task => task.status === 'pending'),\n      onCreateTask: e => handleCreateTask(e, 'pending'),\n      onRemoveTask: handleDeleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      title: \"DONE\",\n      clear: true,\n      tasks: tasks.filter(task => task.status === 'done'),\n      onClearDone: () => handleClearTask('done'),\n      onCreateTask: e => handleCreateTask(e, 'done'),\n      onRemoveTask: handleDeleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Board, \"SRZ/pQGDAT7T8H91OvI2yVxYvxM=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["useEffect","useState","Form","Todo","Board","onUpdate","tasks","setTasks","stored","localStorage","getItem","JSON","parse","setItem","stringify","lastDateTask","task","length","date","handleCreateTask","e","status","id","title","Date","toLocaleString","prevTasks","handleClearTask","filter","handleDeleteTask"],"sources":["/Users/bryanpaucarimafranco/Desktop/kanban-mio/src/components/board/index.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport Form from '../shared-components/form';\nimport Todo from '../todo';\nimport './style.css'\n\nfunction Board({ onUpdate }) {\n    const [tasks, setTasks] = useState(() => {\n        const stored = localStorage.getItem('tasks')\n        return stored ? JSON.parse(stored) : []\n    })\n\n    useEffect(() => {\n        localStorage.setItem('tasks', JSON.stringify(tasks))\n        const lastDateTask = tasks[task.length-1].date\n        onUpdate(lastDateTask)\n    }, [tasks])\n\n    // crea las tasks\n    const handleCreateTask = (e, status) => {\n        // creamos una variable task que declara el objeto con sus propiedades\n        const task = {\n            id: tasks.length > 0 ? tasks[tasks.length - 1].id + 1 : 1,\n            title: e,\n            status: status,\n            date: new Date().toLocaleString()\n        }\n        // Hace una copia de lo que habia en el array actual mas el nuevo\n        setTasks((prevTasks) => [...prevTasks, task])\n    }\n\n    // Elimina las tareas por status\n    const handleClearTask = (status) => {\n        setTasks((prevTasks) => prevTasks.filter(task => task.status !== status)) // filtra los que no cumplen el estado (generico)\n    }\n\n    // Elimina la tarea por id\n    const handleDeleteTask = (id) => {\n        setTasks((prevTasks) => prevTasks.filter(task => task.id !== id)) // filtra los que no cumplen el id\n    }\n\n    return (\n        <div className='board-wrapper'>\n            <Todo\n                title=\"TODO\"\n                tasks={tasks.filter(task => task.status === '')}\n                onCreateTask={e => handleCreateTask(e, '')}\n                onRemoveTask={handleDeleteTask}></Todo>\n            <Todo\n                title=\"IN PROGRESS\"\n                tasks={tasks.filter(task => task.status === 'pending')}\n                onCreateTask={e => handleCreateTask(e, 'pending')}\n                onRemoveTask={handleDeleteTask}></Todo>\n            <Todo\n                title=\"DONE\"\n                clear\n                tasks={tasks.filter(task => task.status === 'done')}\n                onClearDone={() => handleClearTask('done')}\n                onCreateTask={e => handleCreateTask(e, 'done')}\n                onRemoveTask={handleDeleteTask}></Todo>\n        </div>\n    )\n}\n\nexport default Board;"],"mappings":"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"},"metadata":{},"sourceType":"module"}