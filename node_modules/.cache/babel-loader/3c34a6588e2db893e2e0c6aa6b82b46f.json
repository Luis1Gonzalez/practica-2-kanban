{"ast":null,"code":"var _jsxFileName = \"/Users/bryanpaucarimafranco/Desktop/kanban-mio/src/components/board/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Form from '../shared-components/form';\nimport Todo from '../todo';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board() {\n  _s();\n\n  const [tasks, setTasks] = useState([]); // crea las tasks\n\n  const handleCreateTask = (e, status) => {\n    // creamos una variable task que declara el objeto con sus propiedades\n    const task = {\n      id: tasks.length > 0 ? tasks[tasks.length - 1].id + 1 : 1,\n      title: e,\n      status: status,\n      date: new Date()\n    }; // Hace una copia de lo que habia en el array actual mas el nuevo\n\n    setTasks(prevTasks => [...prevTasks, task]);\n  }; // Elimina las tareas por status\n\n\n  const handleClearTask = status => {\n    setTasks(prevTasks => prevTasks.filter(task => task.status !== status)); // filtra los que no cumplen el estado (generico)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(Todo, {\n      title: \"TODO\",\n      tasks: tasks.filter(task => task.status === ''),\n      onCreateTask: e => handleCreateTask(e, '')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      title: \"IN PROGRESS\",\n      tasks: tasks.filter(task => task.status === 'pending'),\n      onCreateTask: e => handleCreateTask(e, 'pending'),\n      children: \"  \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      title: \"DONE\",\n      numberTasks: 1,\n      clear: true,\n      tasks: tasks.filter(task => task.status === 'done'),\n      onClearDone: () => handleClearTask('done'),\n      onCreateTask: e => handleCreateTask(e, 'done'),\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Board, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["useState","Form","Todo","Board","tasks","setTasks","handleCreateTask","e","status","task","id","length","title","date","Date","prevTasks","handleClearTask","filter"],"sources":["/Users/bryanpaucarimafranco/Desktop/kanban-mio/src/components/board/index.jsx"],"sourcesContent":["import { useState } from 'react';\nimport Form from '../shared-components/form';\nimport Todo from '../todo';\nimport './style.css'\n\nfunction Board() {\n    const [tasks, setTasks] = useState([])\n    // crea las tasks\n    const handleCreateTask = (e, status) => {\n    // creamos una variable task que declara el objeto con sus propiedades\n        const task = {\n            id: tasks.length > 0 ? tasks[tasks.length - 1].id + 1 : 1,\n            title: e,\n            status: status,\n            date: new Date()\n        }\n    // Hace una copia de lo que habia en el array actual mas el nuevo\n        setTasks((prevTasks) => [...prevTasks, task])\n    }\n    // Elimina las tareas por status\n    const handleClearTask = (status) => {\n        setTasks((prevTasks) => prevTasks.filter(task => task.status !== status)) // filtra los que no cumplen el estado (generico)\n    }\n\n    return (\n        <div className='board-wrapper'>\n            <Todo title=\"TODO\" tasks={tasks.filter(task => task.status === '')} onCreateTask={e => handleCreateTask(e, '')}></Todo>\n            <Todo title=\"IN PROGRESS\" tasks={tasks.filter(task => task.status === 'pending')} onCreateTask={e => handleCreateTask(e, 'pending')}>  </Todo>\n            <Todo\n                title=\"DONE\"\n                numberTasks={1}\n                clear\n                tasks={tasks.filter(task => task.status === 'done')} \n                onClearDone={() => handleClearTask('done')}\n                onCreateTask={e => handleCreateTask(e, 'done')}> </Todo>\n        </div>\n    )\n}\n\nexport default Board;"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAO,aAAP;;;AAEA,SAASC,KAAT,GAAiB;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC,CADa,CAEb;;EACA,MAAMM,gBAAgB,GAAG,CAACC,CAAD,EAAIC,MAAJ,KAAe;IACxC;IACI,MAAMC,IAAI,GAAG;MACTC,EAAE,EAAEN,KAAK,CAACO,MAAN,GAAe,CAAf,GAAmBP,KAAK,CAACA,KAAK,CAACO,MAAN,GAAe,CAAhB,CAAL,CAAwBD,EAAxB,GAA6B,CAAhD,GAAoD,CAD/C;MAETE,KAAK,EAAEL,CAFE;MAGTC,MAAM,EAAEA,MAHC;MAITK,IAAI,EAAE,IAAIC,IAAJ;IAJG,CAAb,CAFoC,CAQxC;;IACIT,QAAQ,CAAEU,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAeN,IAAf,CAAhB,CAAR;EACH,CAVD,CAHa,CAcb;;;EACA,MAAMO,eAAe,GAAIR,MAAD,IAAY;IAChCH,QAAQ,CAAEU,SAAD,IAAeA,SAAS,CAACE,MAAV,CAAiBR,IAAI,IAAIA,IAAI,CAACD,MAAL,KAAgBA,MAAzC,CAAhB,CAAR,CADgC,CAC0C;EAC7E,CAFD;;EAIA,oBACI;IAAK,SAAS,EAAC,eAAf;IAAA,wBACI,QAAC,IAAD;MAAM,KAAK,EAAC,MAAZ;MAAmB,KAAK,EAAEJ,KAAK,CAACa,MAAN,CAAaR,IAAI,IAAIA,IAAI,CAACD,MAAL,KAAgB,EAArC,CAA1B;MAAoE,YAAY,EAAED,CAAC,IAAID,gBAAgB,CAACC,CAAD,EAAI,EAAJ;IAAvG;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,IAAD;MAAM,KAAK,EAAC,aAAZ;MAA0B,KAAK,EAAEH,KAAK,CAACa,MAAN,CAAaR,IAAI,IAAIA,IAAI,CAACD,MAAL,KAAgB,SAArC,CAAjC;MAAkF,YAAY,EAAED,CAAC,IAAID,gBAAgB,CAACC,CAAD,EAAI,SAAJ,CAArH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI,QAAC,IAAD;MACI,KAAK,EAAC,MADV;MAEI,WAAW,EAAE,CAFjB;MAGI,KAAK,MAHT;MAII,KAAK,EAAEH,KAAK,CAACa,MAAN,CAAaR,IAAI,IAAIA,IAAI,CAACD,MAAL,KAAgB,MAArC,CAJX;MAKI,WAAW,EAAE,MAAMQ,eAAe,CAAC,MAAD,CALtC;MAMI,YAAY,EAAET,CAAC,IAAID,gBAAgB,CAACC,CAAD,EAAI,MAAJ,CANvC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAaH;;GAhCQJ,K;;KAAAA,K;AAkCT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}